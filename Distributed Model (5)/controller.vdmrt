class Robot_Arm_Controller

instance variables
    public ctl_angle: real;
    public target_angle: real;
    ctl_ang_vel: real; 
    ctl_motor_state: <On> | <Off>;

    Kp: real := 0.05;  -- Proportional gain coefficient
    Ki: real := 0.01;  -- Integral gain coefficient
    Kd: real := 0.05;  -- Derivative gain coefficient
    integral: real := 0;
    last_error: real;

operations
    public Robot_Arm_Controller: real * real ==> Robot_Arm_Controller
    Robot_Arm_Controller(start_angle, target_angle_) == (
        ctl_angle := start_angle;
        target_angle := target_angle_;
        ctl_ang_vel := 0;
        ctl_motor_state := <Off>;
        last_error := start_angle - target_angle_;
    );

    public MoveTowardsTargetAngle: () ==> ()  -- PID Controller --
    MoveTowardsTargetAngle() == duration(1E8) (
        dcl err: real := target_angle - ctl_angle;
        dcl derivative: real := err - last_error;
        dcl output: real;
        integral := integral + err;
        output := (Kp * err) + (Ki * integral) + (Kd * derivative);
        MySystem`motor.SetTorque(output);
        last_error := err;
    );

    public Get_Last_Error: () ==> real
    Get_Last_Error() == duration(1E8) (
        return last_error;
    );

    public Set_Target_Angle: real ==> ()
    Set_Target_Angle(a) == duration(1E8) (
        target_angle := a;
    );

    public Set_Motor_State: <On> | <Off> ==> ()
    Set_Motor_State(s) == duration(1E8) (
        ctl_motor_state := s;
        MySystem`motor.SetMotorState(s);
    );

    public MonitorCurrentAngle: () ==> ()
    MonitorCurrentAngle() == duration(1E8) (
        ctl_angle := MySystem`joint.Get_Angle();
    );

    public MonitorCurrentAngVel: () ==> ()
    MonitorCurrentAngVel() == duration(1E8) (
        ctl_ang_vel := MySystem`joint.Get_Ang_Vel();
    );

    public Get_Current_Angle: () ==> real
    Get_Current_Angle() == duration(1E8) (
        return ctl_angle;
    );

    public Get_Current_Ang_Vel: () ==> real
    Get_Current_Ang_Vel() == duration(1E8) (
        return ctl_ang_vel;
    );

end Robot_Arm_Controller